# Market AI Optimization Pipeline Requirements
# Pinned versions for reproducible builds

# === CORE ML LIBRARIES ===
optuna==3.6.1                    # Hyperparameter optimization
xgboost==2.0.3                   # Gradient boosting (primary model)
lightgbm==4.3.0                  # Alternative gradient boosting
catboost==1.2.3                  # Alternative gradient boosting

# === DATA PROCESSING ===
pandas==2.2.2                    # Data manipulation
numpy==1.26.4                    # Numerical computing
scipy==1.13.1                    # Scientific computing
scikit-learn==1.4.2              # ML utilities and preprocessing

# === TIME SERIES & CROSS-VALIDATION ===
tscv==0.1.3                      # Time series cross-validation
mlxtend==0.23.1                  # ML extensions for validation

# === API & DATA PROVIDERS ===
alpaca-py==0.27.0                # Alpaca trading API
yfinance==0.2.28                 # Yahoo Finance data
requests==2.32.3                 # HTTP requests
aiohttp==3.9.5                   # Async HTTP requests

# === FUNDAMENTAL DATA PROVIDERS ===
financialmodelingprep==0.1.0     # FMP API wrapper (if available)
iexfinance==0.5.0                # IEX Cloud API wrapper
alpha-vantage==2.3.1             # Alpha Vantage API wrapper
fredapi==0.5.1                   # FRED API wrapper

# === NEWS & SENTIMENT ===
newsapi-python==0.2.7            # NewsAPI wrapper
finnhub-python==2.4.19           # Finnhub API wrapper
textblob==0.18.0.post0           # Simple sentiment analysis
vaderSentiment==3.3.2            # VADER sentiment analyzer

# === FEATURE ENGINEERING ===
ta==0.10.2                       # Technical analysis indicators
talib-binary==0.4.29             # TA-Lib (if available)
feature-engine==1.7.0            # Feature engineering utilities

# === CONFORMAL PREDICTION ===
mapie==0.8.6                     # Conformal prediction framework
crepes==0.3.0                    # Alternative conformal prediction

# === VALIDATION & METRICS ===
seaborn==0.13.2                  # Statistical visualization
matplotlib==3.8.4                # Plotting
plotly==5.22.0                   # Interactive plots
ipywidgets==8.1.2                # Jupyter widgets

# === PRODUCTION & MONITORING ===
joblib==1.4.2                    # Model serialization
cloudpickle==3.0.0               # Advanced pickling
schedule==1.2.2                  # Task scheduling
psutil==6.0.0                    # System monitoring
mlflow==2.14.1                   # Experiment tracking
dvc==3.51.0                      # Data version control

# === CONFIGURATION & ENVIRONMENT ===
python-dotenv==1.0.1             # Environment variable management
pydantic==2.7.4                  # Data validation
dynaconf==3.2.5                  # Configuration management

# === LOGGING & DEBUGGING ===
loguru==0.7.2                    # Enhanced logging
rich==13.7.1                     # Rich console output
tqdm==4.66.4                     # Progress bars

# === TESTING & QUALITY ===
pytest==8.2.2                    # Testing framework
pytest-cov==5.0.0                # Coverage testing
black==24.4.2                    # Code formatting
flake8==7.1.0                    # Code linting

# === DATABASE & STORAGE ===
sqlalchemy==2.0.31               # Database ORM
psycopg2-binary==2.9.9           # PostgreSQL adapter
redis==5.0.6                     # Redis client

# === PARALLEL PROCESSING ===
dask[complete]==2024.6.2         # Parallel computing
ray[tune]==2.31.0                # Distributed hyperparameter tuning (optional)
multiprocessing-logging==0.3.4   # Logging in multiprocessing

# === STATISTICAL LIBRARIES ===
statsmodels==0.14.2              # Statistical modeling
arch==6.3.0                      # GARCH models for volatility
pymc==5.15.0                     # Probabilistic modeling (optional)

# === TIME UTILITIES ===
python-dateutil==2.9.0.post0     # Date utilities
pytz==2024.1                     # Timezone handling
holidays==0.49                   # Holiday calendars
pandas-market-calendars==4.4.4    # Exchange trading calendars

# === OPTIMIZATION UTILITIES ===
hyperopt==0.2.7                  # Alternative hyperparameter optimization
skopt==0.10.1                    # Scikit-optimize
nevergrad==1.0.4                 # Facebook's optimization library

# === RISK MANAGEMENT ===
quantlib==1.34                   # Quantitative finance library (if available)
pyfolio==0.9.2                   # Portfolio analysis
empyrical==0.5.5                 # Financial metrics

# === COMMUNICATION ===
slack-sdk==3.29.0                # Slack API for alerts
smtplib                          # Email (built-in)
twilio==9.2.2                    # SMS alerts (optional)

# === DEVELOPMENT UTILITIES ===
ipython==8.25.0                  # Enhanced Python shell
jupyter==1.0.0                   # Jupyter notebooks
notebook==7.2.1                  # Jupyter notebook server

# === SYSTEM REQUIREMENTS ===
# Python >= 3.9
# RAM: 8GB minimum, 16GB recommended
# CPU: 4+ cores recommended for parallel optimization
# Storage: 10GB for models and data

# === INSTALLATION NOTES ===
# 1. Install in virtual environment:
#    python -m venv venv
#    source venv/bin/activate  # or venv\Scripts\activate on Windows
#
# 2. Install requirements:
#    pip install -r requirements_optimization.txt
#
# 3. Optional GPU acceleration for XGBoost:
#    pip install xgboost[gpu]
#
# 4. For faster execution, install optional C++ libraries:
#    - TA-Lib: https://ta-lib.org/hdr_dw.html
#    - LightGBM with GPU: pip install lightgbm --install-option=--gpu
#
# 5. For distributed optimization:
#    pip install ray[tune] dask[distributed]

# === COMPATIBILITY NOTES ===
# - Tested on Python 3.9-3.12
# - Compatible with Linux, macOS, Windows
# - GPU acceleration requires CUDA toolkit (optional)
# - Some financial libraries may require additional system dependencies