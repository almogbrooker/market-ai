name: AI Trading Bot CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with ruff
      run: |
        ruff check . --output-format=github
    
    - name: Type check with mypy
      run: |
        mypy . --ignore-missing-imports --no-strict-optional
      continue-on-error: true  # MyPy can be strict, don't fail CI
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --tb=short
      env:
        # Provide dummy values for tests
        ALPACA_API_KEY: test_key_12345678
        ALPACA_SECRET_KEY: test_secret_12345678
        ALPACA_ENV: paper

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Install bandit
      run: |
        pip install bandit[toml]
    
    - name: Run security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt
      continue-on-error: true

  build-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check imports
      run: |
        python -c "
        print('üîç Testing core imports...')
        try:
            from final_production_bot import FinalProductionBot
            print('‚úÖ FinalProductionBot imports successfully')
        except Exception as e:
            print(f'‚ùå Import error: {e}')
            exit(1)
        
        try:
            from src.models.model_trainer import ModelTrainer
            print('‚úÖ ModelTrainer imports successfully')
        except Exception as e:
            print(f'‚ùå Import error: {e}')
            exit(1)
        
        try:
            from src.trading.rebalance import TargetWeightsRebalancer
            print('‚úÖ Rebalancer imports successfully')
        except Exception as e:
            print(f'‚ùå Import error: {e}')
            exit(1)
        
        print('üéØ All critical imports working!')
        "
    
    - name: Check configuration
      run: |
        python src/utils/config.py
      env:
        ALPACA_API_KEY: test_key_12345678
        ALPACA_SECRET_KEY: test_secret_12345678